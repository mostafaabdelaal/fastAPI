steps:
  # Step 1: Install dependencies
  - name: 'python:3.8-slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
        which flake8 || echo "flake8 not found in PATH"
        which pytest || echo "pytest not found in PATH"
        flake8 --version
        pytest --version


  # Step 2: Run Flake8 for linting
  - name: 'python:3.8-slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics  # Check for critical lint errors
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics  # Check code style and complexity

  # Step 3: Run Pytest for unit testing
  - name: 'python:3.8-slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        /usr/local/bin/pytest --maxfail=1 --disable-warnings  # Run pytest to execute tests

  # Step to build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/cobalt-ship-434308-h6/trial1/trial:1.0', '.']

  # Step to push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/cobalt-ship-434308-h6/trial1/trial:1.0']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'trial1'
      - '--image'
      - 'gcr.io/cobalt-ship-434308-h6/trial1/trial:1.0'
      - '--region'
      - 'asia-east1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'


images:
  - 'gcr.io/cobalt-ship-434308-h6/trial1/trial:1.0'

options:
  logging: CLOUD_LOGGING_ONLY
